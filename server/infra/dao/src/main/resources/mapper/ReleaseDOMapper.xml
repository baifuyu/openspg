<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2023 OpenSPG Authors
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed under the License
  ~ is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
  ~ or implied.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antgroup.openspg.server.infra.dao.mapper.ReleaseDOMapper">
  <resultMap id="BaseResultMap" type="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="TIMESTAMP" property="gmtModified" />
    <result column="project_id" jdbcType="BIGINT" property="projectId" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOWithBLOBs">
    <result column="schema_view" jdbcType="LONGVARCHAR" property="schemaView" />
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="change_procedure_id" jdbcType="LONGVARCHAR" property="changeProcedureId" />
    <result column="operation_detail" jdbcType="LONGVARCHAR" property="operationDetail" />
    <result column="error_detail" jdbcType="LONGVARCHAR" property="errorDetail" />
    <result column="operation_info" jdbcType="LONGVARCHAR" property="operationInfo" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modified, project_id, version, user_id, status
  </sql>
  <sql id="Blob_Column_List">
    schema_view, description, change_procedure_id, operation_detail, error_detail, operation_info
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_ontology_release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${@com.antgroup.openspg.server.infra.dao.SecurityUtils@trimSql4OrderBy(orderByClause)}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kg_ontology_release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${@com.antgroup.openspg.server.infra.dao.SecurityUtils@trimSql4OrderBy(orderByClause)}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from kg_ontology_release
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kg_ontology_release
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOExample">
    delete from kg_ontology_release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOWithBLOBs">
    insert into kg_ontology_release (id, gmt_create, gmt_modified, 
      project_id, version, user_id, 
      status, schema_view, description, 
      change_procedure_id, operation_detail, 
      error_detail, operation_info)
    values (#{id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, 
      #{projectId,jdbcType=BIGINT}, #{version,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{schemaView,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR}, 
      #{changeProcedureId,jdbcType=LONGVARCHAR}, #{operationDetail,jdbcType=LONGVARCHAR}, 
      #{errorDetail,jdbcType=LONGVARCHAR}, #{operationInfo,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOWithBLOBs">
    insert into kg_ontology_release
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="schemaView != null">
        schema_view,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="changeProcedureId != null">
        change_procedure_id,
      </if>
      <if test="operationDetail != null">
        operation_detail,
      </if>
      <if test="errorDetail != null">
        error_detail,
      </if>
      <if test="operationInfo != null">
        operation_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="schemaView != null">
        #{schemaView,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="changeProcedureId != null">
        #{changeProcedureId,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationDetail != null">
        #{operationDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="errorDetail != null">
        #{errorDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationInfo != null">
        #{operationInfo,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOExample" resultType="java.lang.Long">
    select count(*) from kg_ontology_release
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update kg_ontology_release
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModified != null">
        gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=BIGINT},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.schemaView != null">
        schema_view = #{record.schemaView,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.changeProcedureId != null">
        change_procedure_id = #{record.changeProcedureId,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.operationDetail != null">
        operation_detail = #{record.operationDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.errorDetail != null">
        error_detail = #{record.errorDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.operationInfo != null">
        operation_info = #{record.operationInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update kg_ontology_release
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      project_id = #{record.projectId,jdbcType=BIGINT},
      version = #{record.version,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      schema_view = #{record.schemaView,jdbcType=LONGVARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR},
      change_procedure_id = #{record.changeProcedureId,jdbcType=LONGVARCHAR},
      operation_detail = #{record.operationDetail,jdbcType=LONGVARCHAR},
      error_detail = #{record.errorDetail,jdbcType=LONGVARCHAR},
      operation_info = #{record.operationInfo,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update kg_ontology_release
    set id = #{record.id,jdbcType=BIGINT},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{record.gmtModified,jdbcType=TIMESTAMP},
      project_id = #{record.projectId,jdbcType=BIGINT},
      version = #{record.version,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOWithBLOBs">
    update kg_ontology_release
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=BIGINT},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="schemaView != null">
        schema_view = #{schemaView,jdbcType=LONGVARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="changeProcedureId != null">
        change_procedure_id = #{changeProcedureId,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationDetail != null">
        operation_detail = #{operationDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="errorDetail != null">
        error_detail = #{errorDetail,jdbcType=LONGVARCHAR},
      </if>
      <if test="operationInfo != null">
        operation_info = #{operationInfo,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDOWithBLOBs">
    update kg_ontology_release
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      project_id = #{projectId,jdbcType=BIGINT},
      version = #{version,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      schema_view = #{schemaView,jdbcType=LONGVARCHAR},
      description = #{description,jdbcType=LONGVARCHAR},
      change_procedure_id = #{changeProcedureId,jdbcType=LONGVARCHAR},
      operation_detail = #{operationDetail,jdbcType=LONGVARCHAR},
      error_detail = #{errorDetail,jdbcType=LONGVARCHAR},
      operation_info = #{operationInfo,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.antgroup.openspg.server.infra.dao.dataobject.ReleaseDO">
    update kg_ontology_release
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      project_id = #{projectId,jdbcType=BIGINT},
      version = #{version,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>