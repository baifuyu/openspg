# Copyright 2023 Ant Group CO., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License
# is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
# or implied.

# ATTENTION!
# This file is generated by Schema automatically, it will be refreshed after schema has been committed
# PLEASE DO NOT MODIFY THIS FILE!!!
#


class RiskMining:
    def __init__(self):
        self.App = self.App()
        self.Cert = self.Cert()
        self.Company = self.Company()
        self.Device = self.Device()
        self.Person = self.Person()
        self.TaxOfRiskApp = self.TaxOfRiskApp()
        self.TaxOfRiskUser = self.TaxOfRiskUser()

    class App:
        __typename__ = "RiskMining.App"
        description = "description"
        id = "id"
        name = "name"
        useCert = "useCert"
        belongTo = "belongTo"
        riskMark = "riskMark"

        def __init__(self):
            pass

    class Cert:
        __typename__ = "RiskMining.Cert"
        description = "description"
        id = "id"
        name = "name"
        certNum = "certNum"

        def __init__(self):
            pass

    class Company:
        __typename__ = "RiskMining.Company"
        description = "description"
        id = "id"
        name = "name"
        hasPhone = "hasPhone"

        def __init__(self):
            pass

    class Device:
        __typename__ = "RiskMining.Device"
        description = "description"
        id = "id"
        name = "name"
        install = "install"
        umid = "umid"

        def __init__(self):
            pass

    class Person:
        __typename__ = "RiskMining.Person"
        description = "description"
        id = "id"
        name = "name"
        hasPhone = "hasPhone"
        belongTo = "belongTo"
        age = "age"

        def __init__(self):
            pass

    class TaxOfRiskApp:
        __typename__ = "RiskMining.TaxOfRiskApp"
        description = "description"
        id = "id"
        name = "name"
        alias = "alias"
        stdId = "stdId"

        def __init__(self):
            pass

    class TaxOfRiskUser:
        __typename__ = "RiskMining.TaxOfRiskUser"
        description = "description"
        id = "id"
        name = "name"
        alias = "alias"
        stdId = "stdId"

        def __init__(self):
            pass
