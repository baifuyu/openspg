#  Copyright 2023 Ant Group CO., Ltd.
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  in compliance with the License. You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software distributed under the License
#  is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  or implied.

# ATTENTION!
# This file is generated by Schema automatically, it will be refreshed after schema has been committed
# PLEASE DO NOT MODIFY THIS FILE!!!
#


class Medical:
    def __init__(self):
        self.BodyPart = self.BodyPart()
        self.Disease = self.Disease()
        self.Symptom = self.Symptom()
        self.Drug = self.Drug()
        self.HospitalDepartment = self.HospitalDepartment()
        self.Indicator = self.Indicator()

    class BodyPart:
        __typename__ = "Medical.BodyPart"
        description = "description"
        id = "id"
        name = "name"
        stdId = "stdId"
        alias = "alias"

        def __init__(self):
            pass

    class Disease:
        __typename__ = "Medical.Disease"
        description = "description"
        id = "id"
        name = "name"
        department = "department"
        commonSymptom = "commonSymptom"
        applicableDrug = "applicableDrug"
        diseaseSite = "diseaseSite"
        complication = "complication"

        def __init__(self):
            pass

    class Symptom:
        __typename__ = "Medical.Symptom"
        description = "description"
        id = "id"
        name = "name"

        def __init__(self):
            pass

    class Drug:
        __typename__ = "Medical.Drug"
        description = "description"
        id = "id"
        name = "name"

        def __init__(self):
            pass

    class HospitalDepartment:
        __typename__ = "Medical.HospitalDepartment"
        description = "description"
        id = "id"
        name = "name"
        stdId = "stdId"
        alias = "alias"

        def __init__(self):
            pass

    class Indicator:
        __typename__ = "Medical.Indicator"
        description = "description"
        id = "id"
        name = "name"

        def __init__(self):
            pass
